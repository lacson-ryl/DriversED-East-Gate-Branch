# Stage 1: Builder
FROM node:20 AS builder
WORKDIR /app

COPY accounts-site/package*.json ./
RUN npm install --include=optional && npm cache clean --force

COPY accounts-site/ ./

# Stage 2: Runtime
FROM node:20-slim
WORKDIR /app

# Install system dependencies for Chrome, Puppeteer, and sharp
RUN apt-get update && apt-get install -y \
  wget curl unzip ca-certificates fonts-liberation \
  libasound2 libatk-bridge2.0-0 libatk1.0-0 libcups2 libdbus-1-3 \
  libgdk-pixbuf2.0-0 libnspr4 libnss3 libx11-xcb1 libxcomposite1 \
  libxdamage1 libxrandr2 libgbm1 libpango-1.0-0 libpangocairo-1.0-0 \
  libxss1 libgtk-3-0 libstdc++6 libxext6 libvips libvips-dev \
  --no-install-recommends && \
  apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Chrome for Puppeteer
RUN curl -LO https://storage.googleapis.com/chrome-for-testing-public/117.0.5938.92/linux64/chrome-linux64.zip && \
  unzip chrome-linux64.zip && \
  mv chrome-linux64 /opt/chrome && \
  ln -sf /opt/chrome/chrome /usr/bin/google-chrome-stable && \
  rm chrome-linux64.zip

COPY --from=builder /root/.cache/puppeteer /root/.cache/puppeteer

# Copy only package files first
COPY --from=builder /app/package*.json /app/

RUN node -e "console.log('Platform:', process.platform, '| Arch:', process.arch)"

# Install all dependencies fresh (including sharp)
RUN npm install --include=optional && \
    node -e "console.log('sharp version:', require('sharp').version)" || exit 1

# Then copy the rest of the app (excluding node_modules)
COPY --from=builder /app/. /app

RUN node -e "console.log('sharp version:', require('sharp').version)" || exit 1

# Create non-root user for Puppeteer
RUN groupadd -r pptruser && useradd -r -g pptruser -G audio,video pptruser && \
  mkdir -p /home/pptruser/Downloads && \
  chown -R pptruser:pptruser /home/pptruser /app

USER pptruser

ENV PUPPETEER_SKIP_DOWNLOAD=true

EXPOSE 8000

HEALTHCHECK CMD curl --fail http://localhost:8000/health-check-docker || exit 1
CMD ["npm", "run", "start"]
